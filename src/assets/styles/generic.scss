* {
  box-sizing: border-box;
}

html,
body,
#root {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
}

body,
button,
input,
textarea {
  font-family: "Montserrat", sans-serif;
}

.pp-hover {
  cursor: pointer;
  transition: opacity 0.2s ease-in-out;

  &:hover {
    opacity: 0.7;
  }
}

.pp-disabled {
  opacity: 0.7;
  cursor: not-allowed !important;
}

.pp-max-width {
  max-width: 500px;
  margin-left: auto;
  margin-right: auto;
}

.pp-button-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  outline: none;

  @extend .pp-hover;
}

.pp-center {
  @include center(true, true);

  &-horizontal {
    @include center(true, false);
  }

  &-vertical {
    @include center(false, true);
  }
}

.pp-h-100 {
  height: 100%;
}

.pp-w-100 {
  width: 100%;
}

.pp-mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.pp-text {
  &-ellipsis {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;

    @for $i from 1 through 10 {
      &-#{$i} {
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: $i;
        line-clamp: $i;
        -webkit-box-orient: vertical;
      }
    }
  }
}

@each $prop, $abbrev in (color: pp-text-colour-, background-color: pp-bg-) {
  @each $name, $colour in $pp-colours {
    .#{$abbrev}#{$name} {
      #{$prop}: #{$colour} !important;
    }
  }
}

@each $name, $colour in $pp-colours {
  .pp-icon {
    &--#{$name} {
      path {
        fill: #{$colour};
      }
    }

    &-stroke-#{$name} {
      path,
      circle {
        stroke: #{$colour};
      }
    }
  }
}

// ** Keyframes **
@keyframes loading {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}
